apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.deploymentName }}"
  labels:
    {{- range $key, $val := .Values.labels }}
    {{ $key }}: "{{ $val }}"
    {{- end }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.labels.app }}
  replicas: {{ default 1 .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- range $key, $val := .Values.labels }}
        {{ $key }}: "{{ $val }}"
        {{- end }}
    spec:
      initContainers:
        - name: init-application
          image: "{{.Values.image.repository}}"
         # command: ["bin/entry bundle exec rails s -p 3005 -b 0.0.0.0"]
          command: ["bin/init"]
          env:
            {{- range $key, $val := .Values.envs }}
            - name: "{{ $key }}"
              value: "{{ $val }}"
            {{- end }}
      containers:
        - name: "{{ .Values.deploymentName }}"
          image: "{{.Values.image.repository}}"
          imagePullPolicy: "{{.Values.image.pullPolicy}}"
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 10
            tcpSocket:
              port: {{ .Values.service.targetPort }}
          ports:
            - containerPort: {{ .Values.service.ports.http }}
          readinessProbe:
            initialDelaySeconds: 20
            periodSeconds: 10
            tcpSocket:
              port: {{ .Values.service.targetPort }}
          {{- if .Values.envs }}
          env:
            {{- range $key, $val := .Values.envs }}
            - name: "{{ $key }}"
              value: "{{ $val }}"
            {{- end }}
          {{- end }}
          resources:
            requests:
              cpu: "{{.Values.resources.requests.cpu}}"
              memory: "{{.Values.resources.requests.memory}}"
            limits:
              cpu: "{{.Values.resources.limits.cpu}}"
              memory: "{{.Values.resources.limits.memory}}"
      {{- if .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- range $key, $val := .Values.image.pullSecrets }}
        - name: "{{ $val }}"
        {{- end }}
      {{- end }}
